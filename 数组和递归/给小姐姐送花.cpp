//
//
//
//
//
//题目4：
//【编程题】给小姐姐送花（递归函数）
//题目ID：1134
//【问题描述】一个整型数组，长度不会超过1000，请将数组元素逆序存储在原数组中（尽量少使用辅助存储空间）
//【输入形式】二行，第一行一个整数，表示数组元素的个数；第二行n个数，依次代表的是数组元素（下标从小到大），各数之间用空格进行分割。
//【输出形式】一行n个数，依次代表的是逆序存储后的数组元素（下标从小到大），各数之间用空格进行分割。
//
//【样例说明】输入第一行为6，表示数组长度为6；输入第二行为1 2 3 4 5 6，代表数组的6个元素。输出一行为6 5 4 3 2 1，依次代表的是逆序存储后的数组元素（下标从小到大）。
//【测试用例】
//1）
//输入：
//10
//23 34 45 56 67 89 12 23 34 55
//输出：
//55 34 23 12 89 67 56 45 34 23
//2）
//输入：
//9
//11 22 33 44 55 66 77 88 99
//输出：
//99 88 77 66 55 44 33 22 11
//3）
//输入：
//9
//0 9 8 7 6 5 4 3 2
//输出：
//2 3 4 5 6 7 8 9 0
//
//
//4）
//输入：
//3
//11 11 11
//输出：
//11 11 11
//
//5）
//输入：
//8
//- 11 - 22 - 33 - 44 - 55 - 66 - 77 - 88
//输出：
//- 88 - 77 - 66 - 55 - 44 - 33 - 22 - 11
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
int quicksort(int a[], int left, int right)
{
	if (left >= right) {
		return 0;
	}
	else {
		int i, j, tem;
		i = left;
		j = right;
		tem = a[i];
		while (i != j) {
			for (; i < j && a[j] <= tem; j--);
			for (; i < j && a[i] >= tem; i++);
			if (i < j) {
				int p;
				p = a[i];
				a[i] = a[j];
				a[j] = p;
			}
		}
		a[left] = a[i];
		a[i] = tem;
		quicksort(a, left + 1, right);
		quicksort(a, left, right - 1);
	}
}
int main()
{
	int n;
	scanf("%d", &n);
	int a[n];
	int i;
	for (i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	quicksort(a, 0, n - 1);
	for (i = 0; i < n; i++) {
		printf("%d ", a[i]);
	}
	return 0;
}